module.exports = {
    secret: 'c3dcfc8c234e6f9e7d8e0b217c48782256abbeff8627882e'
}






// connected to socket Socket {
//   nsp:
//    Namespace {
//      name: '/',
//      server:
//       Server {
//         nsps: [Object],
//         parentNsps: Map {},
//         _path: '/socket.io',
//         _serveClient: true,
//         parser: [Object],
//         encoder: Encoder {},
//         _adapter: [Function: Adapter],
//         _origins: '*:*',
//         sockets: [Circular],
//         eio: [Object],
//         httpServer: [Object],
//         engine: [Object] },
//      sockets: { '0zB-WjOIQ5YpVVpjAAAB': [Circular] },
//      connected: { '0zB-WjOIQ5YpVVpjAAAB': [Circular] },
//      fns: [],
//      ids: 0,
//      rooms: [],
//      flags: {},
//      adapter:
//       Adapter {
//         nsp: [Circular],
//         rooms: [Object],
//         sids: [Object],
//         encoder: Encoder {} },
//      _events: { connection: [Function] },
//      _eventsCount: 1 },
//   server:
//    Server {
//      nsps: { '/': [Object] },
//      parentNsps: Map {},
//      _path: '/socket.io',
//      _serveClient: true,
//      parser:
//       { protocol: 4,
//         types: [Array],
//         CONNECT: 0,
//         DISCONNECT: 1,
//         EVENT: 2,
//         ACK: 3,
//         ERROR: 4,
//         BINARY_EVENT: 5,
//         BINARY_ACK: 6,
//         Encoder: [Function: Encoder],
//         Decoder: [Function: Decoder] },
//      encoder: Encoder {},
//      _adapter: [Function: Adapter],
//      _origins: '*:*',
//      sockets:
//       Namespace {
//         name: '/',
//         server: [Circular],
//         sockets: [Object],
//         connected: [Object],
//         fns: [],
//         ids: 0,
//         rooms: [],
//         flags: {},
//         adapter: [Object],
//         _events: [Object],
//         _eventsCount: 1 },
//      eio:
//       Server {
//         clients: [Object],
//         clientsCount: 1,
//         wsEngine: 'ws',
//         pingTimeout: 5000,
//         pingInterval: 25000,
//         upgradeTimeout: 10000,
//         maxHttpBufferSize: 100000000,
//         transports: [Array],
//         allowUpgrades: true,
//         allowRequest: [Function: bound ],
//         cookie: 'io',
//         cookiePath: '/',
//         cookieHttpOnly: true,
//         perMessageDeflate: [Object],
//         httpCompression: [Object],
//         initialPacket: [Array],
//         ws: [Object],
//         _events: [Object],
//         _eventsCount: 1 },
//      httpServer:
//       Server {
//         domain: null,
//         _events: [Object],
//         _eventsCount: 5,
//         _maxListeners: undefined,
//         _connections: 1,
//         _handle: [Object],
//         _usingSlaves: false,
//         _slaves: [],
//         _unref: false,
//         allowHalfOpen: true,
//         pauseOnConnect: false,
//         httpAllowHalfOpen: false,
//         timeout: 120000,
//         keepAliveTimeout: 5000,
//         _pendingResponseData: 0,
//         maxHeadersCount: null,
//         _connectionKey: '6::::5000',
//         [Symbol(asyncId)]: 17 },
//      engine:
//       Server {
//         clients: [Object],
//         clientsCount: 1,
//         wsEngine: 'ws',
//         pingTimeout: 5000,
//         pingInterval: 25000,
//         upgradeTimeout: 10000,
//         maxHttpBufferSize: 100000000,
//         transports: [Array],
//         allowUpgrades: true,
//         allowRequest: [Function: bound ],
//         cookie: 'io',
//         cookiePath: '/',
//         cookieHttpOnly: true,
//         perMessageDeflate: [Object],
//         httpCompression: [Object],
//         initialPacket: [Array],
//         ws: [Object],
//         _events: [Object],
//         _eventsCount: 1 } },
//   adapter:
//    Adapter {
//      nsp:
//       Namespace {
//         name: '/',
//         server: [Object],
//         sockets: [Object],
//         connected: [Object],
//         fns: [],
//         ids: 0,
//         rooms: [],
//         flags: {},
//         adapter: [Circular],
//         _events: [Object],
//         _eventsCount: 1 },
//      rooms: { '0zB-WjOIQ5YpVVpjAAAB': [Object] },
//      sids: { '0zB-WjOIQ5YpVVpjAAAB': [Object] },
//      encoder: Encoder {} },
//   id: '0zB-WjOIQ5YpVVpjAAAB',
//   client:
//    Client {
//      server:
//       Server {
//         nsps: [Object],
//         parentNsps: Map {},
//         _path: '/socket.io',
//         _serveClient: true,
//         parser: [Object],
//         encoder: Encoder {},
//         _adapter: [Function: Adapter],
//         _origins: '*:*',
//         sockets: [Object],
//         eio: [Object],
//         httpServer: [Object],
//         engine: [Object] },
//      conn:
//       Socket {
//         id: '0zB-WjOIQ5YpVVpjAAAB',
//         server: [Object],
//         upgrading: false,
//         upgraded: false,
//         readyState: 'open',
//         writeBuffer: [],
//         packetsFn: [],
//         sentCallbackFn: [],
//         cleanupFn: [Array],
//         request: [Object],
//         remoteAddress: '::1',
//         checkIntervalTimer: null,
//         upgradeTimeoutTimer: null,
//         pingTimeoutTimer: [Object],
//         transport: [Object],
//         _events: [Object],
//         _eventsCount: 3 },
//      encoder: Encoder {},
//      decoder: Decoder { reconstructor: null, _callbacks: [Object] },
//      id: '0zB-WjOIQ5YpVVpjAAAB',
//      request:
//       IncomingMessage {
//         _readableState: [Object],
//         readable: true,
//         domain: null,
//         _events: {},
//         _eventsCount: 0,
//         _maxListeners: undefined,
//         socket: [Object],
//         connection: [Object],
//         httpVersionMajor: 1,
//         httpVersionMinor: 1,
//         httpVersion: '1.1',
//         complete: true,
//         headers: [Object],
//         rawHeaders: [Array],
//         trailers: {},
//         rawTrailers: [],
//         upgrade: false,
//         url: '/socket.io/?EIO=3&transport=polling&t=MG-aTJH',
//         method: 'GET',
//         statusCode: null,
//         statusMessage: null,
//         client: [Object],
//         _consuming: false,
//         _dumped: true,
//         _query: [Object],
//         res: [Object],
//         cleanup: [Function: cleanup] },
//      onclose: [Function: bound ],
//      ondata: [Function: bound ],
//      onerror: [Function: bound ],
//      ondecoded: [Function: bound ],
//      sockets: { '0zB-WjOIQ5YpVVpjAAAB': [Circular] },
//      nsps: { '/': [Circular] },
//      connectBuffer: [] },
//   conn:
//    Socket {
//      id: '0zB-WjOIQ5YpVVpjAAAB',
//      server:
//       Server {
//         clients: [Object],
//         clientsCount: 1,
//         wsEngine: 'ws',
//         pingTimeout: 5000,
//         pingInterval: 25000,
//         upgradeTimeout: 10000,
//         maxHttpBufferSize: 100000000,
//         transports: [Array],
//         allowUpgrades: true,
//         allowRequest: [Function: bound ],
//         cookie: 'io',
//         cookiePath: '/',
//         cookieHttpOnly: true,
//         perMessageDeflate: [Object],
//         httpCompression: [Object],
//         initialPacket: [Array],
//         ws: [Object],
//         _events: [Object],
//         _eventsCount: 1 },
//      upgrading: false,
//      upgraded: false,
//      readyState: 'open',
//      writeBuffer: [],
//      packetsFn: [],
//      sentCallbackFn: [],
//      cleanupFn: [ [Function], [Function] ],
//      request:
//       IncomingMessage {
//         _readableState: [Object],
//         readable: true,
//         domain: null,
//         _events: {},
//         _eventsCount: 0,
//         _maxListeners: undefined,
//         socket: [Object],
//         connection: [Object],
//         httpVersionMajor: 1,
//         httpVersionMinor: 1,
//         httpVersion: '1.1',
//         complete: true,
//         headers: [Object],
//         rawHeaders: [Array],
//         trailers: {},
//         rawTrailers: [],
//         upgrade: false,
//         url: '/socket.io/?EIO=3&transport=polling&t=MG-aTJH',
//         method: 'GET',
//         statusCode: null,
//         statusMessage: null,
//         client: [Object],
//         _consuming: false,
//         _dumped: true,
//         _query: [Object],
//         res: [Object],
//         cleanup: [Function: cleanup] },
//      remoteAddress: '::1',
//      checkIntervalTimer: null,
//      upgradeTimeoutTimer: null,
//      pingTimeoutTimer:
//       Timeout {
//         _called: false,
//         _idleTimeout: 30000,
//         _idlePrev: [Object],
//         _idleNext: [Object],
//         _idleStart: 22193,
//         _onTimeout: [Function],
//         _timerArgs: undefined,
//         _repeat: null,
//         _destroyed: false,
//         [Symbol(asyncId)]: 325,
//         [Symbol(triggerAsyncId)]: 323 },
//      transport:
//       XHR {
//         readyState: 'open',
//         discarded: false,
//         closeTimeout: 30000,
//         maxHttpBufferSize: 100000000,
//         httpCompression: [Object],
//         supportsBinary: true,
//         _events: [Object],
//         _eventsCount: 5,
//         sid: '0zB-WjOIQ5YpVVpjAAAB',
//         req: null,
//         res: null,
//         writable: false },
//      _events:
//       { close: [Array],
//         data: [Function: bound ],
//         error: [Function: bound ] },
//      _eventsCount: 3 },
//   rooms: {},
//   acks: {},
//   connected: true,
//   disconnected: false,
//   handshake:
//    { headers:
//       { host: 'localhost:5000',
//         connection: 'keep-alive',
//         accept: '*/*',
//         origin: 'http://localhost:3000',
//         'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36',
//         referer: 'http://localhost:3000/dashboard/5b32b9a7548fa11c544fba57',
//         'accept-encoding': 'gzip, deflate, br',
//         'accept-language': 'en-US,en;q=0.9,la;q=0.8',
//         cookie: 'io=vMHjWsrDEUNWH12PAAAA' },
//      time: 'Tue Jun 26 2018 17:08:21 GMT-0700 (Pacific Daylight Time)',
//      address: '::1',
//      xdomain: true,
//      secure: false,
//      issued: 1530058101975,
//      url: '/socket.io/?EIO=3&transport=polling&t=MG-aTJH',
//      query: { EIO: '3', transport: 'polling', t: 'MG-aTJH' } },
//   fns: [],
//   flags: {},
//   _rooms: [] }
// REQ PARAMS { id: '5b32b9a7548fa11c544fba57' }








































// connected to socket Socket {
//   nsp:
//    Namespace {
//      name: '/',
//      server:
//       Server {
//         nsps: [Object],
//         parentNsps: Map {},
//         _path: '/socket.io',
//         _serveClient: true,
//         parser: [Object],
//         encoder: Encoder {},
//         _adapter: [Function: Adapter],
//         _origins: '*:*',
//         sockets: [Circular],
//         eio: [Object],
//         httpServer: [Object],
//         engine: [Object] },
//      sockets:
//       { '0zB-WjOIQ5YpVVpjAAAB': [Object],
//         '8UO5Om_RnKCLCZO8AAAC': [Circular] },
//      connected:
//       { '0zB-WjOIQ5YpVVpjAAAB': [Object],
//         '8UO5Om_RnKCLCZO8AAAC': [Circular] },
//      fns: [],
//      ids: 0,
//      rooms: [],
//      flags: {},
//      adapter:
//       Adapter {
//         nsp: [Circular],
//         rooms: [Object],
//         sids: [Object],
//         encoder: Encoder {} },
//      _events: { connection: [Function] },
//      _eventsCount: 1 },
//   server:
//    Server {
//      nsps: { '/': [Object] },
//      parentNsps: Map {},
//      _path: '/socket.io',
//      _serveClient: true,
//      parser:
//       { protocol: 4,
//         types: [Array],
//         CONNECT: 0,
//         DISCONNECT: 1,
//         EVENT: 2,
//         ACK: 3,
//         ERROR: 4,
//         BINARY_EVENT: 5,
//         BINARY_ACK: 6,
//         Encoder: [Function: Encoder],
//         Decoder: [Function: Decoder] },
//      encoder: Encoder {},
//      _adapter: [Function: Adapter],
//      _origins: '*:*',
//      sockets:
//       Namespace {
//         name: '/',
//         server: [Circular],
//         sockets: [Object],
//         connected: [Object],
//         fns: [],
//         ids: 0,
//         rooms: [],
//         flags: {},
//         adapter: [Object],
//         _events: [Object],
//         _eventsCount: 1 },
//      eio:
//       Server {
//         clients: [Object],
//         clientsCount: 2,
//         wsEngine: 'ws',
//         pingTimeout: 5000,
//         pingInterval: 25000,
//         upgradeTimeout: 10000,
//         maxHttpBufferSize: 100000000,
//         transports: [Array],
//         allowUpgrades: true,
//         allowRequest: [Function: bound ],
//         cookie: 'io',
//         cookiePath: '/',
//         cookieHttpOnly: true,
//         perMessageDeflate: [Object],
//         httpCompression: [Object],
//         initialPacket: [Array],
//         ws: [Object],
//         _events: [Object],
//         _eventsCount: 1 },
//      httpServer:
//       Server {
//         domain: null,
//         _events: [Object],
//         _eventsCount: 5,
//         _maxListeners: undefined,
//         _connections: 5,
//         _handle: [Object],
//         _usingSlaves: false,
//         _slaves: [],
//         _unref: false,
//         allowHalfOpen: true,
//         pauseOnConnect: false,
//         httpAllowHalfOpen: false,
//         timeout: 120000,
//         keepAliveTimeout: 5000,
//         _pendingResponseData: 0,
//         maxHeadersCount: null,
//         _connectionKey: '6::::5000',
//         [Symbol(asyncId)]: 17 },
//      engine:
//       Server {
//         clients: [Object],
//         clientsCount: 2,
//         wsEngine: 'ws',
//         pingTimeout: 5000,
//         pingInterval: 25000,
//         upgradeTimeout: 10000,
//         maxHttpBufferSize: 100000000,
//         transports: [Array],
//         allowUpgrades: true,
//         allowRequest: [Function: bound ],
//         cookie: 'io',
//         cookiePath: '/',
//         cookieHttpOnly: true,
//         perMessageDeflate: [Object],
//         httpCompression: [Object],
//         initialPacket: [Array],
//         ws: [Object],
//         _events: [Object],
//         _eventsCount: 1 } },
//   adapter:
//    Adapter {
//      nsp:
//       Namespace {
//         name: '/',
//         server: [Object],
//         sockets: [Object],
//         connected: [Object],
//         fns: [],
//         ids: 0,
//         rooms: [],
//         flags: {},
//         adapter: [Circular],
//         _events: [Object],
//         _eventsCount: 1 },
//      rooms:
//       { '0zB-WjOIQ5YpVVpjAAAB': [Object],
//         '8UO5Om_RnKCLCZO8AAAC': [Object] },
//      sids:
//       { '0zB-WjOIQ5YpVVpjAAAB': [Object],
//         '8UO5Om_RnKCLCZO8AAAC': [Object] },
//      encoder: Encoder {} },
//   id: '8UO5Om_RnKCLCZO8AAAC',
//   client:
//    Client {
//      server:
//       Server {
//         nsps: [Object],
//         parentNsps: Map {},
//         _path: '/socket.io',
//         _serveClient: true,
//         parser: [Object],
//         encoder: Encoder {},
//         _adapter: [Function: Adapter],
//         _origins: '*:*',
//         sockets: [Object],
//         eio: [Object],
//         httpServer: [Object],
//         engine: [Object] },
//      conn:
//       Socket {
//         id: '8UO5Om_RnKCLCZO8AAAC',
//         server: [Object],
//         upgrading: false,
//         upgraded: false,
//         readyState: 'open',
//         writeBuffer: [],
//         packetsFn: [],
//         sentCallbackFn: [],
//         cleanupFn: [Array],
//         request: [Object],
//         remoteAddress: '::1',
//         checkIntervalTimer: null,
//         upgradeTimeoutTimer: null,
//         pingTimeoutTimer: [Object],
//         transport: [Object],
//         _events: [Object],
//         _eventsCount: 3 },
//      encoder: Encoder {},
//      decoder: Decoder { reconstructor: null, _callbacks: [Object] },
//      id: '8UO5Om_RnKCLCZO8AAAC',
//      request:
//       IncomingMessage {
//         _readableState: [Object],
//         readable: true,
//         domain: null,
//         _events: {},
//         _eventsCount: 0,
//         _maxListeners: undefined,
//         socket: [Object],
//         connection: [Object],
//         httpVersionMajor: 1,
//         httpVersionMinor: 1,
//         httpVersion: '1.1',
//         complete: true,
//         headers: [Object],
//         rawHeaders: [Array],
//         trailers: {},
//         rawTrailers: [],
//         upgrade: false,
//         url: '/socket.io/?EIO=3&transport=polling&t=MG-ar3T',
//         method: 'GET',
//         statusCode: null,
//         statusMessage: null,
//         client: [Object],
//         _consuming: false,
//         _dumped: true,
//         _query: [Object],
//         res: [Object],
//         cleanup: [Function: cleanup] },
//      onclose: [Function: bound ],
//      ondata: [Function: bound ],
//      onerror: [Function: bound ],
//      ondecoded: [Function: bound ],
//      sockets: { '8UO5Om_RnKCLCZO8AAAC': [Circular] },
//      nsps: { '/': [Circular] },
//      connectBuffer: [] },
//   conn:
//    Socket {
//      id: '8UO5Om_RnKCLCZO8AAAC',
//      server:
//       Server {
//         clients: [Object],
//         clientsCount: 2,
//         wsEngine: 'ws',
//         pingTimeout: 5000,
//         pingInterval: 25000,
//         upgradeTimeout: 10000,
//         maxHttpBufferSize: 100000000,
//         transports: [Array],
//         allowUpgrades: true,
//         allowRequest: [Function: bound ],
//         cookie: 'io',
//         cookiePath: '/',
//         cookieHttpOnly: true,
//         perMessageDeflate: [Object],
//         httpCompression: [Object],
//         initialPacket: [Array],
//         ws: [Object],
//         _events: [Object],
//         _eventsCount: 1 },
//      upgrading: false,
//      upgraded: false,
//      readyState: 'open',
//      writeBuffer: [],
//      packetsFn: [],
//      sentCallbackFn: [],
//      cleanupFn: [ [Function], [Function] ],
//      request:
//       IncomingMessage {
//         _readableState: [Object],
//         readable: true,
//         domain: null,
//         _events: {},
//         _eventsCount: 0,
//         _maxListeners: undefined,
//         socket: [Object],
//         connection: [Object],
//         httpVersionMajor: 1,
//         httpVersionMinor: 1,
//         httpVersion: '1.1',
//         complete: true,
//         headers: [Object],
//         rawHeaders: [Array],
//         trailers: {},
//         rawTrailers: [],
//         upgrade: false,
//         url: '/socket.io/?EIO=3&transport=polling&t=MG-ar3T',
//         method: 'GET',
//         statusCode: null,
//         statusMessage: null,
//         client: [Object],
//         _consuming: false,
//         _dumped: true,
//         _query: [Object],
//         res: [Object],
//         cleanup: [Function: cleanup] },
//      remoteAddress: '::1',
//      checkIntervalTimer: null,
//      upgradeTimeoutTimer: null,
//      pingTimeoutTimer:
//       Timeout {
//         _called: false,
//         _idleTimeout: 30000,
//         _idlePrev: [Object],
//         _idleNext: [Object],
//         _idleStart: 119482,
//         _onTimeout: [Function],
//         _timerArgs: undefined,
//         _repeat: null,
//         _destroyed: false,
//         [Symbol(asyncId)]: 1222,
//         [Symbol(triggerAsyncId)]: 1208 },
//      transport:
//       XHR {
//         readyState: 'open',
//         discarded: false,
//         closeTimeout: 30000,
//         maxHttpBufferSize: 100000000,
//         httpCompression: [Object],
//         supportsBinary: true,
//         _events: [Object],
//         _eventsCount: 5,
//         sid: '8UO5Om_RnKCLCZO8AAAC',
//         req: null,
//         res: null,
//         writable: false },
//      _events:
//       { close: [Array],
//         data: [Function: bound ],
//         error: [Function: bound ] },
//      _eventsCount: 3 },
//   rooms: {},
//   acks: {},
//   connected: true,
//   disconnected: false,
//   handshake:
//    { headers:
//       { host: 'localhost:5000',
//         connection: 'keep-alive',
//         accept: '*/*',
//         origin: 'http://localhost:3000',
//         'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36',
//         referer: 'http://localhost:3000/',
//         'accept-encoding': 'gzip, deflate, br',
//         'accept-language': 'en-US,en;q=0.9,la;q=0.8',
//         cookie: 'io=0zB-WjOIQ5YpVVpjAAAB' },
//      time: 'Tue Jun 26 2018 17:09:59 GMT-0700 (Pacific Daylight Time)',
//      address: '::1',
//      xdomain: true,
//      secure: false,
//      issued: 1530058199263,
//      url: '/socket.io/?EIO=3&transport=polling&t=MG-ar3T',
//      query: { EIO: '3', transport: 'polling', t: 'MG-ar3T' } },
//   fns: [],
//   flags: {},
//   _rooms: [] }


